/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volScalarField;
    location    "0";
    object      wallHeatFlux;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 0 -3 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    left_back
    {
        type            calculated;
        value           uniform 0;
    }
    left_bottom
    {
        type            calculated;
        value           uniform 0;
    }
    left_left
    {
        type            calculated;
        value           uniform 0;
    }
    left_front
    {
        type            calculated;
        value           uniform 0;
    }
    left_top
    {
        type            calculated;
        value           uniform 0;
    }
    int_back
    {
        type            calculated;
        value           uniform 0;
    }
    int_bottom
    {
        type            calculated;
        value           nonuniform List<scalar>
20
(
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935816
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
313.034006935814
)
;
    }
    int_front
    {
        type            calculated;
        value           uniform 0;
    }
    int_top
    {
        type            calculated;
        value           uniform 0;
    }
    right_back
    {
        type            calculated;
        value           uniform 0;
    }
    right_bottom
    {
        type            calculated;
        value           uniform 0;
    }
    right_front
    {
        type            calculated;
        value           uniform 0;
    }
    right_right
    {
        type            calculated;
        value           uniform 0;
    }
    right_top
    {
        type            calculated;
        value           uniform 0;
    }
}


// ************************************************************************* //
